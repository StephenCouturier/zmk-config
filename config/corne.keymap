/ {
    keymap {
        compatible = "zmk,keymap";
    };
};

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB               &kp Q        &kp W           &kp E               &kp R                       &kp T              &kp Y        &kp U                  &kp I             &kp O            &kp P                         &kp BSPC
&kp LS(LA(LC(LGUI)))  &hm LCTRL A  &hm LEFT_ALT S  &hm LEFT_GUI D      &hm LS(LA(LC(LEFT_GUI))) F  &kp G              &kp H        &hm RIGHT_CONTROL J    &hm RIGHT_ALT K   &hm RIGHT_GUI L  &hm LS(LA(LC(LEFT_GUI))) SQT  &kp SEMI
&kp LEFT_ALT          &hm Z LSHFT  &kp X           &kp C               &kp V                       &kp B              &kp N        &kp M                  &kp COMMA         &kp DOT          &hm SLASH RIGHT_SHIFT         &kp ESC
                                                   &mt LEFT_GUI EQUAL  &lt 4 TAB                   &lt 1 BACKSPACE    &lt 2 SPACE  &mt RIGHT_SHIFT ENTER  &mt RCTRL ESCAPE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans         &trans       &kp LEFT_PARENTHESIS  &kp AMPERSAND    &kp KP_MULTIPLY  &kp LPAR   &kp RPAR           &trans
&trans  &trans  &trans  &trans  &trans         &trans       &kp LEFT_BRACE        &kp DOLLAR       &kp PERCENT      &kp CARET  &kp RIGHT_BRACE    &trans
&trans  &trans  &trans  &trans  &kp SEMICOLON  &kp TILDE    &kp LEFT_BRACKET      &kp EXCLAMATION  &kp AT_SIGN      &kp HASH   &kp RIGHT_BRACKET  &trans
                        &trans  &trans         &trans       &mo 3                 &kp COLON        &kp GRAVE
            >;
        };

        navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans         &trans       &trans     &trans            &kp BSPC
&trans  &none   &none   &none   &none   &none     &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp LC(LEFT_ALT)  &trans
&trans  &none   &none   &none   &none   &none     &none     &kp PAGE_DOWN  &kp PAGE_UP  &none      &none             &trans
                        &trans  &trans  &mo 3     &trans    &trans         &trans
            >;
        };

        function {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp C_BRI_UP     &none   &kp C_VOLUME_UP  &bt BT_NXT  &none  &none  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp C_BRI_DEC    &none   &kp C_VOL_DN     &bt BT_PRV  &none  &none  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none            &none   &kp K_MUTE       &none       &none  &none  &trans
                         &trans   &trans   &trans           &trans  &trans           &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS       &kp N7    &kp N8        &kp N9        &kp NON_US_BACKSLASH  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp UNDERSCORE  &kp N4    &kp N5        &kp NUMBER_6  &kp PIPE              &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp EQUAL       &kp N1    &kp N2        &kp NUMBER_3  &kp ASTERISK          &trans
                        &trans  &trans  &trans    &trans          &kp PLUS  &kp NUMBER_0
            >;
        };
    };
};
